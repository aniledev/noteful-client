{"version":3,"sources":["CircleButton/CircleButton.js","apiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","ValidationError.js","NotefulForm/AddFolder.js","NotefulForm/AddNote.js","ErrorBoundary.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","handleAddNote","handleAddFolder","handleDeleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","apiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","PORT_URL","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","response","ok","Error","status","catch","error","console","log","modified","Date","toISOString","date","dateNormalizer","format","onDeleteNote","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","push","content","split","para","i","ValidationError","message","Fragment","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","changed","setState","trim","event","_this2","myHeaders","Headers","append","options","body","JSON","stringify","redirect","json","Promise","reject","responseJson","folderName","alert","_this3","folderNameError","validateFolderName","onSubmit","handleSubmit","placeholder","onChange","updateFolderName","target","disabled","AddNote","handleModified","iso","_this$state","noteNameError","validateNoteName","noteContentError","validateNoteContent","validateFolderId","htmlFor","required","updateNoteName","minLength","updateNoteContent","updateFolderId","ErrorBoundary","hasError","App","toConsumableArray","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","ErrorBoundary_ErrorBoundary","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"4ZAIe,SAASA,EAAgBC,GACcA,EAA5CC,IAA4CD,EAAvCE,UAAuCF,EAA5BG,SADqB,IACRC,EADQC,OAAAC,EAAA,EAAAD,CACOL,EADP,gCAG7C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,kBAAmBF,EAAME,WAAWQ,KAAK,MAClDN,GAELJ,EAAMG,UAcVJ,EAAgBY,aAAe,CAC7BV,IAAK,KCxBQM,UAAMK,cAAc,CACjCC,MAAO,GACPC,QAAS,GAETC,UAAW,aACXC,QAAS,aACTC,WAAY,aACZC,cAAe,aACfC,gBAAiB,aACjBC,iBAAkB,eCVPC,EAAW,eAACR,EAADS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtBX,EAAMa,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,KCIZI,0LAGV,IAAAC,EAC8BC,KAAKC,QADnCC,EAAAH,EACChB,eADD,IAAAmB,EACW,GADXA,EAAAC,EAAAJ,EACejB,aADf,IAAAqB,EACuB,GADvBA,EAEP,OACEC,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,eACbiC,EAAAC,EAAA5B,cAAA,MAAIN,UAAU,qBACXY,EAAQuB,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAA5B,cAAA,MAAI+B,IAAKD,EAAOV,IACdO,EAAAC,EAAA5B,cAACgC,EAAA,EAAD,CACEtC,UAAU,2BACVuC,GAAE,WAAAC,OAAaJ,EAAOV,KAEtBO,EAAAC,EAAA5B,cAAA,QAAMN,UAAU,0BDVG,eAACW,EAADS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIqB,EAAXrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCX,EAAM+B,OAAO,SAAAjB,GAAI,OAAIA,EAAKgB,WAAaA,IAAUpB,OCUhCsB,CAAoBhC,EAAOyB,EAAOV,KAEpCU,EAAOQ,UAKhBX,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,+BACbiC,EAAAC,EAAA5B,cAACT,EAAD,CACEE,IAAK8C,IACLN,GAAG,cACHO,KAAK,SACL9C,UAAU,kCAEViC,EAAAC,EAAA5B,cAACyC,EAAA,EAAD,CAAiBC,KAAK,SACtBf,EAAAC,EAAA5B,cAAA,WAPF,mBAvB+BD,IAAM4C,YAA1BtB,EACZuB,YAAcC,YCFFC,mLAWV,IAAAC,EAAAxB,KAAAD,EACoBC,KAAKC,QAAxBnB,EADDiB,EACCjB,MAAOC,EADRgB,EACQhB,QACPW,EAAWM,KAAK/B,MAAMwD,MAAMC,OAA5BhC,OAEFa,EFtBgB,eAACxB,EAADQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIqB,EAAbrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACxBV,EAAQY,KAAK,SAAAY,GAAM,OAAIA,EAAOV,KAAOe,IEqBpBe,CAAW5C,GADbO,EAASR,EAAOY,IAAW,IACAkB,UACxC,OACER,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,eACbiC,EAAAC,EAAA5B,cAACT,EAAD,CACEE,IAAI,SACJ0D,KAAK,OACLC,QAAS,kBAAML,EAAKvD,MAAM6D,QAAQC,UAClC5D,UAAU,4BAEViC,EAAAC,EAAA5B,cAACyC,EAAA,EAAD,CAAiBC,KAAK,iBACtBf,EAAAC,EAAA5B,cAAA,WAPF,QAUC8B,GAAUH,EAAAC,EAAA5B,cAAA,MAAIN,UAAU,4BAA4BoC,EAAOQ,cA5B3BvC,IAAM4C,WAA1BG,EACZ3C,aAAe,CACpBkD,QAAS,CACPC,OAAQ,cAEVN,MAAO,CACLC,OAAQ,KANOH,EASZF,YAAcC,cChBRU,UAAA,CACbC,SAAU,2CCQSC,6MAUnBC,kBAAoB,SAAAC,GAClBA,EAAEC,iBACF,IAAM3C,EAAS8B,EAAKvD,MAAM4B,GAE1ByC,MAAK,GAAA3B,OAAIqB,EAAOC,SAAX,eAAAtB,OAAiCjB,GAAU,CAC9C6C,OAAQ,SACRC,QAAS,CACPC,eAAgB,sBAejBC,KAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAEzBtB,EAAKvB,QAAQf,WAAWQ,KAG3BgD,KAAK,kBAAMlB,EAAKvD,MAAM6D,QAAQC,WAC9BgB,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,8EAGvB,IAAA7C,EACgBH,KAAKC,QAApBnB,aADD,IAAAqB,EACS,GADTA,EAEDT,EAASM,KAAK/B,MAAM4B,GACtBD,EAAOd,EAAMa,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,KAAW,CACnDG,GAAIH,EACJyD,UAAU,IAAIC,MAAOC,eAGnBC,EAAO,IAAIF,KAAKxD,EAAKuD,UACrBI,EAAiBC,iBAAOF,EAAM,eAElC,OACElD,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,QACbiC,EAAAC,EAAA5B,cAAA,MAAIN,UAAU,eACZiC,EAAAC,EAAA5B,cAACuC,EAAA,EAAD,CAAMN,GAAE,SAAAC,OAAWX,KAAK/B,MAAM4B,KAAOG,KAAK/B,MAAM8C,OAElDX,EAAAC,EAAA5B,cAAA,UACEN,UAAU,eACV8C,KAAK,SACLY,QAAS7B,KAAKmC,mBAEd/B,EAAAC,EAAA5B,cAACyC,EAAA,EAAD,CAAiBC,KAAK,cALxB,WAOAf,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,eACbiC,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,wBAAf,YACWiC,EAAAC,EAAA5B,cAAA,QAAMN,UAAU,QAAQoF,aApEX/E,IAAM4C,WAAnBc,EACZtD,aAAe,CACpB6C,MAAO,CACLC,OAAQ,IAEV+B,aAAc,cALGvB,EAQZb,YAAcC,EA6EvBY,EAAKtD,aAAe,CAClBiB,GAAI,GACJsD,SAAU,GACVpC,KAAM,eCxFa2C,mLASV,IAAAlC,EAAAxB,KACCY,EAAaZ,KAAK/B,MAAMwD,MAAMC,OAA9Bd,SADDT,EAEgBH,KAAKC,QAApBnB,MACF6E,ELfuB,eAAC7E,EAADS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIqB,EAAXrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAC7BmB,EAEE9B,EAAM+B,OAAO,SAAAjB,GAAI,OAAIA,EAAKgB,WAAaA,IADvC9B,EKaqB8E,MAHhB,IAAAzD,EAES,GAFTA,EAGyCS,GAChD,OACER,EAAAC,EAAA5B,cAAA,WAASN,UAAU,gBACjBiC,EAAAC,EAAA5B,cAAA,UACGkF,EAAerD,IAAI,SAAAV,GAAI,OACtBQ,EAAAC,EAAA5B,cAAA,MAAI+B,IAAKZ,EAAKC,IACZO,EAAAC,EAAA5B,cAACoF,EAAD,CACEhE,GAAID,EAAKC,GACTkB,KAAMnB,EAAKmB,KACXoC,SAAUvD,EAAKuD,SACfrB,QAASN,EAAKvD,MAAM6D,cAK5B1B,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,kCACbiC,EAAAC,EAAA5B,cAACT,EAAD,CACEE,IAAK8C,IACLN,GAAG,YACHO,KAAK,SACL9C,UAAU,iCAEViC,EAAAC,EAAA5B,cAACyC,EAAA,EAAD,CAAiBC,KAAK,SACtBf,EAAAC,EAAA5B,cAAA,WAPF,iBA5BgCD,IAAM4C,WAA3BsC,EACZ9E,aAAe,CACpBkD,QAAS,CAAEC,OAAQ,cACnBN,MAAO,CACLC,OAAQ,KAJOgC,EAOZrC,YAAcC,aCVFwC,6MAUnBzE,iBAAmB,SAAAK,GACjB8B,EAAKvD,MAAM6D,QAAQiC,KAAnB,8EAGO,IAAA5D,EACgBH,KAAKC,QAApBnB,aADD,IAAAqB,EACS,GADTA,EAECT,EAAWM,KAAK/B,MAAMwD,MAAMC,OAA5BhC,OACFE,EAAON,EAASR,EAAOY,IAAW,CAAEsE,QAAS,IACnD,OACE5D,EAAAC,EAAA5B,cAAA,WAASN,UAAU,gBACjBiC,EAAAC,EAAA5B,cAACoF,EAAD,CACEhE,GAAID,EAAKC,GACTkB,KAAMnB,EAAKmB,KACXoC,SAAUvD,EAAKuD,SACfM,aAAczD,KAAKX,iBACnByC,QAAS9B,KAAK/B,MAAM6D,UAEtB1B,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,yBACZyB,EAAKoE,QAAQC,MAAM,YAAY3D,IAAI,SAAC4D,EAAMC,GAAP,OAClC/D,EAAAC,EAAA5B,cAAA,KAAG+B,IAAK2D,GAAID,cA7BkB1F,IAAM4C,WAA3B0C,EACZlF,aAAe,CACpBkD,QAAS,CAAEC,OAAQ,cACnBN,MAAO,CACLC,OAAQ,KAJOoC,EAQZzC,YAAcC,SCZR,SAAS8C,EAAgBnG,GACtC,OAAIA,EAAMoG,QACDjE,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,SAASF,EAAMoG,SAEhCjE,EAAAC,EAAA5B,cAAA2B,EAAAC,EAAAiE,SAAA,UCAYC,cACnB,SAAAA,EAAYtG,GAAO,IAAAuD,EAAA,OAAAlD,OAAAkG,EAAA,EAAAlG,CAAA0B,KAAAuE,IACjB/C,EAAAlD,OAAAmG,EAAA,EAAAnG,CAAA0B,KAAA1B,OAAAoG,EAAA,EAAApG,CAAAiG,GAAAI,KAAA3E,KAAM/B,KACD2G,MAAQ,CACX7D,KAAM,CACJ8D,MAAO,GACPC,SAAS,IALItD,gFAgBFT,GACff,KAAK+E,SAAS,CACZhE,KAAM,CAAE8D,MAAO9D,EAAM+D,SAAS,kDAKhC,IAAM/D,EAAOf,KAAK4E,MAAM7D,KAAK8D,MAAMG,OACnC,OAAoB,IAAhBjE,EAAKvB,OACA,6BACEuB,EAAKvB,OAAS,EAChB,uDADF,uCAKIyF,GAAO,IAAAC,EAAAlF,KAClBiF,EAAM5C,iBADY,IAEVtB,EAASf,KAAK4E,MAAd7D,KACRkC,QAAQC,IAAR,SAAAvC,OAAqBI,EAAK8D,QAE1B,IAAMM,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBAEjC,IAEMC,EAAU,CACd/C,OAAQ,OACRC,QAAS2C,EACTI,KALeC,KAAKC,UAAU,CAAE1E,KAAMA,EAAK8D,QAM3Ca,SAAU,UAGZpD,MAAK,GAAA3B,OAAIqB,EAAOC,SAAX,gBAAmCqD,GACrC5C,KAAK,SAAAC,GACJ,OAAKA,EAASC,GAGLD,EAASgD,OAFThD,EAASgD,OAAOjD,KAAK,SAAAuC,GAAK,OAAIW,QAAQC,OAAOZ,OAKvDvC,KAAK,SAAAoD,GACJZ,EAAKjF,QAAQb,gBAAgB0G,GAC7BZ,EAAKH,SAAS,CAAEgB,WAAY,KAC5Bb,EAAKjH,MAAM6D,QAAQC,WAEpBgB,MAAM,SAAAC,GAAK,OAAIgD,MAAM,2DAGjB,IAAAC,EAAAjG,KACDkG,EAAkBlG,KAAKmG,qBAE7B,OACE/F,EAAAC,EAAA5B,cAAA,QAAMN,UAAU,YAAYiI,SAAU,SAAAhE,GAAC,OAAI6D,EAAKI,aAAajE,KAC3DhC,EAAAC,EAAA5B,cAAA,8BACA2B,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,cACbiC,EAAAC,EAAA5B,cAAA,4BACA2B,EAAAC,EAAA5B,cAAA,SACEwC,KAAK,OACL9C,UAAU,aACV4C,KAAK,OACLlB,GAAG,OACHyG,YAAY,aACZC,SAAU,SAAAnE,GAAC,OAAI6D,EAAKO,iBAAiBpE,EAAEqE,OAAO5B,WAGjD7E,KAAK4E,MAAM7D,KAAK+D,SACf1E,EAAAC,EAAA5B,cAAC2F,EAAD,CAAiBC,QAAS6B,IAG5B9F,EAAAC,EAAA5B,cAAA,UACEwC,KAAK,SACL9C,UAAU,cACVuI,SAAU1G,KAAKmG,sBAHjB,sBAtF+B/E,aAAlBmD,EAWZ3F,aAAe,CACpBkD,QAAS,CAAEC,OAAQ,eAZFwC,EAeZlD,YAAcC,aCdFqF,cACnB,SAAAA,EAAY1I,GAAO,IAAAuD,EAAA,OAAAlD,OAAAkG,EAAA,EAAAlG,CAAA0B,KAAA2G,IACjBnF,EAAAlD,OAAAmG,EAAA,EAAAnG,CAAA0B,KAAA1B,OAAAoG,EAAA,EAAApG,CAAAqI,GAAAhC,KAAA3E,KAAM/B,KA8BR2I,eAAiB,WACf,IACIC,GADQ,IAAIzD,MACAC,cAChB7B,EAAKuD,SAAS,CAAE5B,SAAU0D,KAhC1BrF,EAAKoD,MAAQ,CACX7D,KAAM,CACJ8D,MAAO,GACPC,SAAS,GAEXd,QAAS,CACPa,MAAO,GACPC,SAAS,GAEXlE,SAAU,CACRiE,MAAO,GACPC,SAAS,GAEX3B,SAAU,CACR0B,MAAO,KAhBMrD,mFA4BjBxB,KAAK4G,wDASQ7F,GACbf,KAAK+E,SAAS,CACZhE,KAAM,CAAE8D,MAAO9D,EAAM+D,SAAS,+CAGhBd,GAChBhE,KAAK+E,SAAS,CACZf,QAAS,CAAEa,MAAOb,EAASc,SAAS,4CAIzBlE,GACbZ,KAAK+E,SAAS,CACZnE,SAAU,CAAEiE,MAAOjE,EAAUkE,SAAS,gDAKxC,IAAM/D,EAAOf,KAAK4E,MAAM7D,KAAK8D,MAAMG,OACnC,OAAoB,IAAhBjE,EAAKvB,OACA,yBACEuB,EAAKvB,OAAS,EAChB,gDADF,gDAMP,IAAMwE,EAAUhE,KAAK4E,MAAMZ,QAAQa,MAAMG,OACzC,OAAuB,IAAnBhB,EAAQxE,OACH,4BACEwE,EAAQxE,OAAS,EACnB,mDADF,6CAOP,GAAwB,IADPQ,KAAK4E,MAAMhE,SAASiE,MAAMG,OAC9BxF,OACX,MAAO,kEAIEyF,GAAO,IAAAC,EAAAlF,KAClBiF,EAAM5C,iBADY,IAAAyE,EAE4B9G,KAAK4E,MAA3C7D,EAFU+F,EAEV/F,KAAMiD,EAFI8C,EAEJ9C,QAASpD,EAFLkG,EAEKlG,SAAUuC,EAFf2D,EAEe3D,SACjCF,QAAQC,IAAR,SAAAvC,OAAqBI,EAAK8D,QAC1B5B,QAAQC,IAAR,YAAAvC,OAAwBqD,EAAQa,QAChC5B,QAAQC,IAAR,WAAAvC,OAAuBC,EAASiE,QAEhC,IAAMM,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBAEjC,IAOMC,EAAU,CACd/C,OAAQ,OACRC,QAAS2C,EACTI,KAVeC,KAAKC,UAAU,CAC9B1E,KAAMA,EAAK8D,MACXb,QAASA,EAAQa,MACjBjE,SAAUA,EAASiE,MACnB1B,SAAUA,IAOVuC,SAAU,UAGZpD,MAAK,GAAA3B,OAAIqB,EAAOC,SAAX,cAAiCqD,GACnC5C,KAAK,SAAAC,GACJ,OAAKA,EAASC,GAGLD,EAASgD,OAFThD,EAASgD,OAAOjD,KAAK,SAAAuC,GAAK,OAAIW,QAAQC,OAAOZ,OAKvDvC,KAAK,SAAAoD,GACJZ,EAAKjF,QAAQd,cAAc2G,GAC3BZ,EAAKjH,MAAM6D,QAAQC,WAEpBgB,MAAM,SAAAC,GAAK,OAAIgD,MAAMhD,EAAMqB,4CAGvB,IAAA4B,EAAAjG,KAAAE,EACkBF,KAAKC,QAAtBlB,eADD,IAAAmB,EACW,GADXA,EAED6G,EAAgB/G,KAAKgH,mBACrBC,EAAmBjH,KAAKkH,sBACxBhB,EAAkBlG,KAAKmH,mBACvB7B,EAAUvG,EAAQuB,IAAI,SAAAC,GAAM,OAChCH,EAAAC,EAAA5B,cAAA,UAAQoG,MAAOtE,EAAOV,IAAKU,EAAOQ,QAGpC,OACEX,EAAAC,EAAA5B,cAAA,QAAMN,UAAU,UAAUiI,SAAU,SAAAhE,GAAC,OAAI6D,EAAKI,aAAajE,KACzDhC,EAAAC,EAAA5B,cAAA,4BACA2B,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,cACbiC,EAAAC,EAAA5B,cAAA,SAAO2I,QAAQ,QAAf,aACAhH,EAAAC,EAAA5B,cAAA,SACEwC,KAAK,OACL9C,UAAU,aACV4C,KAAK,OACLlB,GAAG,OACHyG,YAAY,WACZe,UAAQ,EACRd,SAAU,SAAAnE,GAAC,OAAI6D,EAAKqB,eAAelF,EAAEqE,OAAO5B,WAG/C7E,KAAK4E,MAAM7D,KAAK+D,SAAW1E,EAAAC,EAAA5B,cAAC2F,EAAD,CAAiBC,QAAS0C,IACtD3G,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,cACbiC,EAAAC,EAAA5B,cAAA,SAAO2I,QAAQ,WAAf,gBACAhH,EAAAC,EAAA5B,cAAA,YACEwC,KAAK,OACL9C,UAAU,gBACV4C,KAAK,UACLlB,GAAG,UACH0H,UAAU,IACVjB,YAAY,eACZe,UAAQ,EACRd,SAAU,SAAAnE,GAAC,OAAI6D,EAAKuB,kBAAkBpF,EAAEqE,OAAO5B,WAGlD7E,KAAK4E,MAAMZ,QAAQc,SAClB1E,EAAAC,EAAA5B,cAAC2F,EAAD,CAAiBC,QAAS4C,IAE5B7G,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,cACbiC,EAAAC,EAAA5B,cAAA,SAAO2I,QAAQ,UAAf,mBACAhH,EAAAC,EAAA5B,cAAA,UACEwC,KAAK,OACL9C,UAAU,eACV4C,KAAK,SACLlB,GAAG,SACHyG,YAAY,cACZe,UAAQ,EACRd,SAAU,SAAAnE,GAAC,OAAI6D,EAAKwB,eAAerF,EAAEqE,OAAO5B,SAE3CS,IAGJtF,KAAK4E,MAAMhE,SAASkE,SACnB1E,EAAAC,EAAA5B,cAAC2F,EAAD,CAAiBC,QAAS6B,IAG5B9F,EAAAC,EAAA5B,cAAA,UACEwC,KAAK,SACL9C,UAAU,cACVuI,SACE1G,KAAKgH,oBACLhH,KAAKkH,uBACLlH,KAAKmH,oBANT,oBAlL6B/F,aAAhBuF,EAsBZ/H,aAAe,CACpBkD,QAAS,CAAEC,OAAQ,eAvBF4E,EA0BZtF,YAAcC,EA6KvBqF,EAAQ/H,aAAe,CACrB2B,OAAQ,eC7MWmH,cACnB,SAAAA,EAAYzJ,GAAO,IAAAuD,EAAA,OAAAlD,OAAAkG,EAAA,EAAAlG,CAAA0B,KAAA0H,IAEjBlG,EAAAlD,OAAAmG,EAAA,EAAAnG,CAAA0B,KAAA1B,OAAAoG,EAAA,EAAApG,CAAAoJ,GAAA/C,KAAA3E,KAAM/B,KACD2G,MAAQ,CACX+C,UAAU,GAJKnG,wEAajB,OAAIxB,KAAK4E,MAAM+C,SAEXvH,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,iBACbiC,EAAAC,EAAA5B,cAAA,8CAICuB,KAAK/B,MAAMG,4DAXY4E,GAC9B,MAAO,CAAE2E,UAAU,UAXoBvG,aCmH5BwG,6MAtGbhD,MAAQ,CACN9F,MAAO,GACPC,QAAS,MAuBXI,cAAgB,SAAAS,GACd4B,EAAKuD,SAAS,CAAEjG,MAAMR,OAAAuJ,EAAA,EAAAvJ,CAAKkD,EAAKoD,MAAM9F,OAAjB6B,OAAA,CAAwBf,SAG/CR,gBAAkB,SAAAmB,GAChBiB,EAAKuD,SAAS,CAAEhG,QAAQT,OAAAuJ,EAAA,EAAAvJ,CAAKkD,EAAKoD,MAAM7F,SAAjB4B,OAAA,CAA0BJ,SAGnDlB,iBAAmB,SAAAK,GACjB8B,EAAKuD,SAAS,CACZjG,MAAO0C,EAAKoD,MAAM9F,MAAM+B,OAAO,SAAAjB,GAAI,OAAIA,EAAKC,KAAOH,0FA9BnC,IAAAwF,EAAAlF,KAClB4F,QAAQkC,IAAI,CACVxF,MAAK,GAAA3B,OAAIqB,EAAOC,SAAX,eACLK,MAAK,GAAA3B,OAAIqB,EAAOC,SAAX,mBAEJS,KAAK,SAAAqF,GAA4B,IAAAC,EAAA1J,OAAA2J,EAAA,EAAA3J,CAAAyJ,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAChC,OAAKE,EAAStF,GACTuF,EAAWvF,GAGTgD,QAAQkC,IAAI,CAACI,EAASvC,OAAQwC,EAAWxC,SAFvCwC,EAAWxC,OAAOjD,KAAK,SAAAN,GAAC,OAAIwD,QAAQC,OAAOzD,KAF3B8F,EAASvC,OAAOjD,KAAK,SAAAN,GAAC,OAAIwD,QAAQC,OAAOzD,OAMnEM,KAAK,SAAA0F,GAAsB,IAAAC,EAAA/J,OAAA2J,EAAA,EAAA3J,CAAA8J,EAAA,GAApBtJ,EAAoBuJ,EAAA,GAAbtJ,EAAasJ,EAAA,GAC1BnD,EAAKH,SAAS,CAAEjG,QAAOC,cAExBgE,MAAM,SAAAC,GACLC,QAAQC,IAAIF,+CAmBhB,OACE5C,EAAAC,EAAA5B,cAAA2B,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAA5B,cAAC6J,EAAD,KACG,CAAC,IAAK,qBAAqBhI,IAAI,SAAAiI,GAAI,OAClCnI,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACjI,IAAK+H,EAAMA,KAAMA,EAAMG,UAAW5I,MAEjDM,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOD,KAAK,gBAAgBG,UAAWnH,IACvCnB,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOD,KAAK,cAAcG,UAAWnH,IACrCnB,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOD,KAAK,YAAYG,UAAWnH,iDAOzC,OACEnB,EAAAC,EAAA5B,cAAA2B,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAA5B,cAAC6J,EAAD,KACG,CAAC,IAAK,qBAAqBhI,IAAI,SAAAiI,GAAI,OAClCnI,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACjI,IAAK+H,EAAMA,KAAMA,EAAMG,UAAWhF,MAEjDtD,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOD,KAAK,gBAAgBG,UAAW5E,IAEvC1D,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACF,KAAK,cAAcG,UAAWnE,IAE3CnE,EAAAC,EAAA5B,cAAC+J,EAAA,EAAD,CACEC,OAAK,EACLF,KAAK,YACLG,UAAW/B,EACXpG,OAAQP,KAAK4E,MAAM7F,6CAQ3B,IAAM8F,EAAQ,CACZ/F,MAAOkB,KAAK4E,MAAM9F,MAClBC,QAASiB,KAAK4E,MAAM7F,QACpBG,WAAYc,KAAKX,iBACjBF,cAAea,KAAKb,cACpBC,gBAAiBY,KAAKZ,iBAGxB,OACEgB,EAAAC,EAAA5B,cAAC6C,EAAWqH,SAAZ,CAAqB9D,MAAOA,GAC1BzE,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,OACbiC,EAAAC,EAAA5B,cAAA,OAAKN,UAAU,YAAY6B,KAAK4I,mBAChCxI,EAAAC,EAAA5B,cAAA,UAAQN,UAAU,eAChBiC,EAAAC,EAAA5B,cAAA,UACE2B,EAAAC,EAAA5B,cAACuC,EAAA,EAAD,CAAMN,GAAG,KAAT,WAA4B,IAC5BN,EAAAC,EAAA5B,cAACyC,EAAA,EAAD,CAAiBC,KAAK,mBAG1Bf,EAAAC,EAAA5B,cAAA,QAAMN,UAAU,aAAa6B,KAAK6I,6BAhG1BzH,aCClB0H,IAAQC,IAAIC,IAAQC,IAAeC,IAAYC,KAE/CC,IAASC,OACPjJ,EAAAC,EAAA5B,cAAC6K,EAAA,EAAD,KACElJ,EAAAC,EAAA5B,cAAC8K,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.e470fb18.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CircleButton.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props;\n\n  return React.createElement(\n    props.tag,\n    {\n      className: [\"NavCircleButton\", props.className].join(\" \"),\n      ...otherProps\n    },\n    props.children\n  );\n}\n\nNavCircleButton.propTypes = {\n  // define prop types here\n  tag: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.func.isRequired\n  ]),\n  className: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired\n};\n\nNavCircleButton.defaultProps = {\n  tag: \"a\"\n};\n","import React from \"react\";\n\n// use createContext to initialize context for use in application\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  // empty update functions\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n  handleAddNote: () => {},\n  handleAddFolder: () => {},\n  handleDeleteNote: () => {}\n});\n","export const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { countNotesForFolder } from \"../notes-helpers\";\nimport \"./NoteListNav.css\";\n\nexport default class NoteListNav extends React.Component {\n  static contextType = apiContext;\n\n  render() {\n    const { folders = [], notes = [] } = this.context;\n    return (\n      <div className=\"NoteListNav\">\n        <ul className=\"NoteListNav__list\">\n          {folders.map(folder => (\n            <li key={folder.id}>\n              <NavLink\n                className=\"NoteListNav__folder-link\"\n                to={`/folder/${folder.id}`}\n              >\n                <span className=\"NoteListNav__num-notes\">\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListNav__button-wrapper\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-folder\"\n            type=\"button\"\n            className=\"NoteListNav__add-folder-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { findNote, findFolder } from \"../notes-helpers\";\nimport \"./NotePageNav.css\";\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => {}\n    },\n    match: {\n      params: {}\n    }\n  };\n  static contextType = apiContext;\n\n  render() {\n    const { notes, folders } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, noteId) || {};\n    const folder = findFolder(folders, note.folderId);\n    return (\n      <div className=\"NotePageNav\">\n        <CircleButton\n          tag=\"button\"\n          role=\"link\"\n          onClick={() => this.props.history.goBack()}\n          className=\"NotePageNav__back-button\"\n        >\n          <FontAwesomeIcon icon=\"chevron-left\" />\n          <br />\n          Back\n        </CircleButton>\n        {folder && <h3 className=\"NotePageNav__folder-name\">{folder.name}</h3>}\n      </div>\n    );\n  }\n}","export default {\n  PORT_URL: \"https://vast-eyrie-10587.herokuapp.com\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Note.css\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\nimport PropTypes from \"prop-types\";\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    },\n    onDeleteNote: () => {}\n  };\n\n  static contextType = apiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault();\n    const noteId = this.props.id;\n\n    fetch(`${config.PORT_URL}/api/notes/${noteId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      // .then(res => {\n      //   if (!res.ok) return res.json().then(e => Promise.reject(e));\n      //   return res.json();\n      // })\n      // .then(() => {\n      //   this.context.deleteNote(noteId);\n      //   // allow parent to perform extra behaviour\n      //   this.props.onDeleteNote(noteId);\n      // })\n      // .catch(error => {\n      //   console.error({ error });\n      // });\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          this.context.deleteNote(noteId);\n        }\n      })\n      .then(() => this.props.history.goBack())\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    const { notes = [] } = this.context;\n    const noteId = this.props.id;\n    let note = notes.find(note => note.id === noteId) || {\n      id: noteId,\n      modified: new Date().toISOString()\n    };\n\n    let date = new Date(note.modified);\n    let dateNormalizer = format(date, \"do MMM YYYY\");\n\n    return (\n      <div className=\"Note\">\n        <h2 className=\"Note__title\">\n          <Link to={`/note/${this.props.id}`}>{this.props.name}</Link>\n        </h2>\n        <button\n          className=\"Note__delete\"\n          type=\"button\"\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon=\"trash-alt\" /> remove\n        </button>\n        <div className=\"Note__dates\">\n          <div className=\"Note__dates-modified\">\n            Modified <span className=\"Date\">{dateNormalizer}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// format(this.props.modified, \"Do MMM YYYY\");\n\nNote.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  modified: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onDeleteNote: PropTypes.func\n};\n\nNote.defaultProps = {\n  id: \"\",\n  modified: \"\",\n  name: \"\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Note from \"../Note/Note\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { getNotesForFolder } from \"../notes-helpers\";\nimport \"./NoteListMain.css\";\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    history: { goBack: () => {} },\n    match: {\n      params: {}\n    }\n  };\n  static contextType = apiContext;\n\n  render() {\n    const { folderId } = this.props.match.params;\n    const { notes = [] } = this.context;\n    const notesForFolder = getNotesForFolder(notes, folderId);\n    return (\n      <section className=\"NoteListMain\">\n        <ul>\n          {notesForFolder.map(note => (\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n                history={this.props.history}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListMain__button-container\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-note\"\n            type=\"button\"\n            className=\"NoteListMain__add-note-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport Note from \"../Note/Note\";\nimport apiContext from \"../apiContext\";\nimport { findNote } from \"../notes-helpers\";\nimport \"./NotePageMain.css\";\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    history: { goBack: () => {} },\n    match: {\n      params: {}\n    }\n  };\n\n  static contextType = apiContext;\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    const { notes = [] } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, noteId) || { content: \"\" };\n    return (\n      <section className=\"NotePageMain\">\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n          history={this.props.history}\n        />\n        <div className=\"NotePageMain__content\">\n          {note.content.split(/\\n \\r|\\n/).map((para, i) => (\n            <p key={i}>{para}</p>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function ValidationError(props) {\n  if (props.message) {\n    return <div className=\"error\">{props.message}</div>;\n  }\n  return <></>;\n}\n","import React, { Component } from \"react\";\nimport \"./AddFolder.css\";\nimport ValidationError from \"../ValidationError\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\n\nexport default class AddFolder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        changed: false\n      }\n    };\n  }\n\n  static defaultProps = {\n    history: { goBack: () => {} }\n  };\n\n  static contextType = apiContext;\n\n  updateFolderName(name) {\n    this.setState({\n      name: { value: name, changed: true }\n    });\n  }\n\n  validateFolderName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"A folder name is required.\";\n    } else if (name.length < 3) {\n      return \"Folder name must be at least 3 characters long.\";\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name } = this.state;\n    console.log(`Name: ${name.value}`);\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const JSONBody = JSON.stringify({ name: name.value });\n\n    const options = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSONBody,\n      redirect: \"follow\"\n    };\n\n    fetch(`${config.PORT_URL}/api/folders`, options)\n      .then(response => {\n        if (!response.ok) {\n          return response.json().then(event => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      })\n      .then(responseJson => {\n        this.context.handleAddFolder(responseJson);\n        this.setState({ folderName: \"\" });\n        this.props.history.goBack();\n      })\n      .catch(error => alert(\"Something went wrong\"));\n  }\n\n  render() {\n    const folderNameError = this.validateFolderName();\n\n    return (\n      <form className=\"AddFolder\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Add a new folder</h2>\n        <div className=\"form-group\">\n          <label>Folder Name</label>\n          <input\n            type=\"text\"\n            className=\"name-input\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"New Folder\"\n            onChange={e => this.updateFolderName(e.target.value)}\n          />\n        </div>\n        {this.state.name.changed && (\n          <ValidationError message={folderNameError} />\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"name-button\"\n          disabled={this.validateFolderName()}\n        >\n          Add Folder\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddNote.css\";\nimport ValidationError from \"../ValidationError\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\n\nexport default class AddNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        changed: false\n      },\n      content: {\n        value: \"\",\n        changed: false\n      },\n      folderId: {\n        value: \"\",\n        changed: false\n      },\n      modified: {\n        value: \"\"\n      }\n    };\n  }\n\n  static defaultProps = {\n    history: { goBack: () => {} }\n  };\n\n  static contextType = apiContext;\n\n  componentDidMount() {\n    this.handleModified();\n  }\n\n  handleModified = () => {\n    let today = new Date();\n    let iso = today.toISOString();\n    this.setState({ modified: iso });\n  };\n\n  updateNoteName(name) {\n    this.setState({\n      name: { value: name, changed: true }\n    });\n  }\n  updateNoteContent(content) {\n    this.setState({\n      content: { value: content, changed: true }\n    });\n  }\n\n  updateFolderId(folderId) {\n    this.setState({\n      folderId: { value: folderId, changed: true }\n    });\n  }\n\n  validateNoteName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Note name is required.\";\n    } else if (name.length < 3) {\n      return \"Note name must be at least 3 characters.\";\n    }\n  }\n\n  validateNoteContent() {\n    const content = this.state.content.value.trim();\n    if (content.length === 0) {\n      return \"Note content is required.\";\n    } else if (content.length < 3) {\n      return \"Note content must be at least 3 characters.\";\n    }\n  }\n\n  validateFolderId() {\n    const folderId = this.state.folderId.value.trim();\n    if (folderId.length === 0) {\n      return \"A folder must be selected.\";\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name, content, folderId, modified } = this.state;\n    console.log(`Name: ${name.value}`);\n    console.log(`Content: ${content.value}`);\n    console.log(`Folder: ${folderId.value}`);\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const JSONBody = JSON.stringify({\n      name: name.value,\n      content: content.value,\n      folderId: folderId.value,\n      modified: modified\n    });\n\n    const options = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSONBody,\n      redirect: \"follow\"\n    };\n\n    fetch(`${config.PORT_URL}/api/notes`, options)\n      .then(response => {\n        if (!response.ok) {\n          return response.json().then(event => Promise.reject(event));\n        } else {\n          return response.json();\n        }\n      })\n      .then(responseJson => {\n        this.context.handleAddNote(responseJson);\n        this.props.history.goBack();\n      })\n      .catch(error => alert(error.message));\n  }\n\n  render() {\n    const { folders = [] } = this.context;\n    const noteNameError = this.validateNoteName();\n    const noteContentError = this.validateNoteContent();\n    const folderNameError = this.validateFolderId();\n    const options = folders.map(folder => (\n      <option value={folder.id}>{folder.name}</option>\n    ));\n\n    return (\n      <form className=\"AddNote\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Add a new note</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Note Name</label>\n          <input\n            type=\"text\"\n            className=\"name-input\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"New Note\"\n            required\n            onChange={e => this.updateNoteName(e.target.value)}\n          />\n        </div>\n        {this.state.name.changed && <ValidationError message={noteNameError} />}\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Note Content</label>\n          <textarea\n            type=\"text\"\n            className=\"content-input\"\n            name=\"content\"\n            id=\"content\"\n            minLength=\"3\"\n            placeholder=\"Note Content\"\n            required\n            onChange={e => this.updateNoteContent(e.target.value)}\n          />\n        </div>\n        {this.state.content.changed && (\n          <ValidationError message={noteContentError} />\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"folder\">Select A Folder</label>\n          <select\n            type=\"text\"\n            className=\"folder-input\"\n            name=\"folder\"\n            id=\"folder\"\n            placeholder=\"Folder Name\"\n            required\n            onChange={e => this.updateFolderId(e.target.value)}\n          >\n            {options}\n          </select>\n        </div>\n        {this.state.folderId.changed && (\n          <ValidationError message={folderNameError} />\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"name-button\"\n          disabled={\n            this.validateNoteName() ||\n            this.validateNoteContent() ||\n            this.validateFolderId()\n          }\n        >\n          Add Note\n        </button>\n      </form>\n    );\n  }\n}\n\nAddNote.propTypes = {\n  // define prop types here\n  folder: PropTypes.array.isRequired\n};\n\nAddNote.defaultProps = {\n  folder: []\n};\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    // initialize state with a constructor\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  // This lifecycle is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"ErrorBoundary\">\n          <h2>Could not display this content.</h2>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport NoteListNav from \"../NoteListNav/NoteListNav\";\nimport NotePageNav from \"../NotePageNav/NotePageNav\";\nimport NoteListMain from \"../NoteListMain/NoteListMain\";\nimport NotePageMain from \"../NotePageMain/NotePageMain\";\nimport AddFolder from \"../NotefulForm/AddFolder\";\nimport AddNote from \"../NotefulForm/AddNote\";\nimport \"./App.css\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\nimport ErrorBoundary from \"../ErrorBoundary\";\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.PORT_URL}/api/notes`),\n      fetch(`${config.PORT_URL}/api/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  handleAddNote = note => {\n    this.setState({ notes: [...this.state.notes, note] });\n  };\n\n  handleAddFolder = folder => {\n    this.setState({ folders: [...this.state.folders, folder] });\n  };\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    });\n  };\n\n  renderNavRoutes() {\n    return (\n      <>\n        <ErrorBoundary>\n          {[\"/\", \"/folder/:folderId\"].map(path => (\n            <Route exact key={path} path={path} component={NoteListNav} />\n          ))}\n          <Route path=\"/note/:noteId\" component={NotePageNav} />\n          <Route path=\"/add-folder\" component={NotePageNav} />\n          <Route path=\"/add-note\" component={NotePageNav} />\n        </ErrorBoundary>\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <ErrorBoundary>\n          {[\"/\", \"/folder/:folderId\"].map(path => (\n            <Route exact key={path} path={path} component={NoteListMain} />\n          ))}\n          <Route path=\"/note/:noteId\" component={NotePageMain} />\n\n          <Route exact path=\"/add-folder\" component={AddFolder} />\n\n          <Route\n            exact\n            path=\"/add-note\"\n            component={AddNote}\n            folder={this.state.folders}\n          />\n        </ErrorBoundary>\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      handleAddNote: this.handleAddNote,\n      handleAddFolder: this.handleAddFolder,\n    };\n\n    return (\n      <apiContext.Provider value={value}>\n        <div className=\"App\">\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{\" \"}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">{this.renderMainRoutes()}</main>\n        </div>\n      </apiContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faPlus,\n  faChevronLeft,\n  faTrashAlt,\n  faCheckDouble\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}