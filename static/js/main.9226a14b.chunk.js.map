{"version":3,"sources":["CircleButton/CircleButton.js","apiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","ValidationError.js","NotefulForm/AddFolder.js","NotefulForm/AddNote.js","ErrorBoundary.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","apiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","PORT_URL","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","format","modified","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","ValidationError","message","Fragment","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","changed","setState","trim","event","log","myHeaders","Headers","append","JSONBody","JSON","stringify","body","redirect","Error","redirected","window","location","href","alert","_this2","folderNameError","validateFolderName","onSubmit","handleSubmit","defaultValue","onChange","updateFolderName","target","disabled","AddNote","_this$state","noteNameError","validateNoteName","noteContentError","validateNoteContent","validateFolderId","options","htmlFor","required","updateNoteName","minlength","updateNoteContent","updateFolderId","ErrorBoundary","hasError","App","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","ErrorBoundary_ErrorBoundary","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9226a14b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CircleButton.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props;\n\n  return React.createElement(\n    props.tag,\n    {\n      className: [\"NavCircleButton\", props.className].join(\" \"),\n      ...otherProps\n    },\n    props.children\n  );\n}\n\nNavCircleButton.propTypes = {\n  // define prop types here\n  tag: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired\n};\n\nNavCircleButton.defaultProps = {\n  tag: \"a\"\n};\n","import React from \"react\";\n\n// use createContext to initialize context for use in application\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  // empty update functions\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {}\n});\n\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { countNotesForFolder } from \"../notes-helpers\";\nimport \"./NoteListNav.css\";\n\nexport default class NoteListNav extends React.Component {\n  static contextType = apiContext;\n\n  render() {\n    const { folders = [], notes = [] } = this.context;\n    return (\n      <div className=\"NoteListNav\">\n        <ul className=\"NoteListNav__list\">\n          {folders.map(folder => (\n            <li key={folder.id}>\n              <NavLink\n                className=\"NoteListNav__folder-link\"\n                to={`/folder/${folder.id}`}\n              >\n                <span className=\"NoteListNav__num-notes\">\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListNav__button-wrapper\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-folder\"\n            type=\"button\"\n            className=\"NoteListNav__add-folder-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { findNote, findFolder } from \"../notes-helpers\";\nimport \"./NotePageNav.css\";\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => {}\n    },\n    match: {\n      params: {}\n    }\n  };\n  static contextType = apiContext;\n\n  render() {\n    const { notes, folders } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, noteId) || {};\n    const folder = findFolder(folders, note.folderId);\n    return (\n      <div className=\"NotePageNav\">\n        <CircleButton\n          tag=\"button\"\n          role=\"link\"\n          onClick={() => this.props.history.goBack()}\n          className=\"NotePageNav__back-button\"\n        >\n          <FontAwesomeIcon icon=\"chevron-left\" />\n          <br />\n          Back\n        </CircleButton>\n        {folder && <h3 className=\"NotePageNav__folder-name\">{folder.name}</h3>}\n      </div>\n    );\n  }\n}","export default {\n  PORT_URL: \"http://localhost:9090\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Note.css\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\nimport PropTypes from \"prop-types\";\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    onDeleteNote: () => {}\n  };\n  static contextType = apiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault();\n    const noteId = this.props.id;\n\n    fetch(`${config.PORT_URL}/notes/${noteId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res.json();\n      })\n      .then(() => {\n        this.context.deleteNote(noteId);\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId);\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"Note\">\n        <h2 className=\"Note__title\">\n          <Link to={`/note/${this.props.id}`}>{this.props.name}</Link>\n        </h2>\n        <button\n          className=\"Note__delete\"\n          type=\"button\"\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon=\"trash-alt\" /> remove\n        </button>\n        <div className=\"Note__dates\">\n          <div className=\"Note__dates-modified\">\n            Modified{\" \"}\n            <span className=\"Date\">\n              {format(this.props.modified, \"Do MMM YYYY\")}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  modified: PropTypes.isRequired,\n  name: PropTypes.string.isRequired,\n  onDeleteNote: PropTypes.func.isRequired\n};\n\nNote.defaultProps = {\n  id: \"\",\n  modified: \"\",\n  name: \"\",\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Note from \"../Note/Note\";\nimport CircleButton from \"../CircleButton/CircleButton\";\nimport apiContext from \"../apiContext\";\nimport { getNotesForFolder } from \"../notes-helpers\";\nimport \"./NoteListMain.css\";\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  };\n  static contextType = apiContext;\n\n  render() {\n    const { folderId } = this.props.match.params;\n    const { notes = [] } = this.context;\n    const notesForFolder = getNotesForFolder(notes, folderId);\n    return (\n      <section className=\"NoteListMain\">\n        <ul>\n          {notesForFolder.map(note => (\n            <li key={note.id}>\n              <Note id={note.id} name={note.name} modified={note.modified} />\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListMain__button-container\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-note\"\n            type=\"button\"\n            className=\"NoteListMain__add-note-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport Note from \"../Note/Note\";\nimport apiContext from \"../apiContext\";\nimport { findNote } from \"../notes-helpers\";\nimport \"./NotePageMain.css\";\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  };\n  static contextType = apiContext;\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    const { notes = [] } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, noteId) || { content: \"\" };\n    return (\n      <section className=\"NotePageMain\">\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className=\"NotePageMain__content\">\n          {note.content.split(/\\n \\r|\\n/).map((para, i) => (\n            <p key={i}>{para}</p>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\"; // use conditional rendering to display the error message\nexport default function ValidationError(props) {\n  if (props.message) {\n    return <div className=\"error\">{props.message}</div>;\n  }\n  return <></>;\n}\n\nValidationError.propTypes = {\n  message: PropTypes.striing\n};\n\n","import React, { Component } from \"react\";\nimport \"./AddFolder.css\";\nimport ValidationError from \"../ValidationError\";\nimport apiContext from \"../apiContext\";\n\nexport default class AddFolder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        changed: false\n      }\n    };\n  }\n\n  static contextType = apiContext;\n\n  updateFolderName(name) {\n    this.setState({\n      name: { value: name, changed: true }\n    });\n  }\n\n  validateFolderName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"A folder name is required.\";\n    } else if (name.length < 3) {\n      return \"Folder name must be at least 3 characters long.\";\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name } = this.state;\n    console.log(`Name: ${name.value}`);\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const JSONBody = JSON.stringify({ name: name.value });\n\n    const options = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSONBody,\n      redirect: \"follow\"\n    };\n\n    fetch(\"http://localhost:9090/folders\", options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong. Try again later.\");\n        } else if (res.ok) {\n          if (!res.redirected) {\n            window.location.href = \"http://localhost:3000/\";\n          }\n        }\n      })\n      .catch(error => alert(error.message));\n  }\n\n  render() {\n    const folderNameError = this.validateFolderName();\n\n    return (\n      <form className=\"AddFolder\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Add a new folder</h2>\n        <div className=\"form-group\">\n          <label>Folder Name</label>\n          <input\n            type=\"text\"\n            className=\"name-input\"\n            name=\"name\"\n            id=\"name\"\n            defaultValue=\"New Folder\"\n            onChange={e => this.updateFolderName(e.target.value)}\n          />\n        </div>\n        {this.state.name.changed && (\n          <ValidationError message={folderNameError} />\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"name-button\"\n          disabled={this.validateFolderName()}\n        >\n          Add Folder\n        </button>\n      </form>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddNote.css\";\nimport ValidationError from \"../ValidationError\";\nimport apiContext from \"../apiContext\";\n\nexport default class AddNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        changed: false\n      },\n      content: {\n        value: \"\",\n        changed: false\n      },\n      folderId: {\n        value: \"\",\n        changed: false\n      }\n    };\n  }\n\n  static contextType = apiContext;\n\n  updateNoteName(name) {\n    this.setState({\n      name: { value: name, changed: true }\n    });\n  }\n  updateNoteContent(content) {\n    this.setState({\n      content: { value: content, changed: true }\n    });\n  }\n\n  updateFolderId(folderId) {\n    this.setState({\n      folderId: { value: folderId, changed: true }\n    });\n  }\n\n  validateNoteName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Note name is required.\";\n    } else if (name.length < 3) {\n      return \"Note name must be at least 3 characters.\";\n    }\n  }\n\n  validateNoteContent() {\n    const content = this.state.content.value.trim();\n    if (content.length === 0) {\n      return \"Note content is required.\";\n    } else if (content.length < 3) {\n      return \"Note content must be at least 3 characters.\";\n    }\n  }\n\n  validateFolderId() {\n    const folderId = this.state.folderId.value.trim();\n    if (folderId.length === 0) {\n      return \"A folder must be selected.\";\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name, content, folderId } = this.state;\n    console.log(`Name: ${name.value}`);\n    console.log(`Content: ${content.value}`);\n    console.log(`Folder: ${folderId.value}`);\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    const JSONBody = JSON.stringify({\n      name: name.value,\n      content: content.value,\n      folderId: folderId.value\n    });\n\n    const options = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSONBody,\n      redirect: \"follow\"\n    };\n\n    fetch(\"http://localhost:9090/notes\", options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong. Try again later.\");\n        } else if (res.ok) {\n          if (!res.redirected) {\n            window.location.href = \"http://localhost:3000/\";\n          }\n        }\n      })\n      .catch(error => alert(error.message));\n  }\n\n  render() {\n    const { folders = []} = this.context;\n    const noteNameError = this.validateNoteName();\n    const noteContentError = this.validateNoteContent();\n    const folderNameError = this.validateFolderId();\n    const options = folders.map(folder => (\n      <option value={folder.id}>{folder.name}</option>\n    ));\n\n    return (\n      <form className=\"AddNote\" onSubmit={e => this.handleSubmit(e)}>\n        <h2>Add a new note</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Note Name</label>\n          <input\n            type=\"text\"\n            className=\"name-input\"\n            name=\"name\"\n            id=\"name\"\n            defaultValue=\"New Note\"\n            required\n            onChange={e => this.updateNoteName(e.target.value)}\n          />\n        </div>\n        {this.state.name.changed && <ValidationError message={noteNameError} />}\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Note Content</label>\n          <textarea\n            type=\"text\"\n            className=\"content-input\"\n            name=\"content\"\n            id=\"content\"\n            minlength=\"3\"\n            defaultValue=\"Note Content\"\n            required\n            onChange={e => this.updateNoteContent(e.target.value)}\n          />\n        </div>\n        {this.state.content.changed && (\n          <ValidationError message={noteContentError} />\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"folder\">Select A Folder</label>\n          <select\n            type=\"text\"\n            className=\"folder-input\"\n            name=\"folder\"\n            id=\"folder\"\n            defaultValue=\"Folder Name\"\n            required\n            onChange={e => this.updateFolderId(e.target.value)}\n          >\n            {options}\n          </select>\n        </div>\n        {this.state.folderId.changed && (\n          <ValidationError message={folderNameError} />\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"name-button\"\n          disabled={\n            this.validateNoteName() ||\n            this.validateNoteContent() ||\n            this.validateFolderId()\n          }\n        >\n          Add Note\n        </button>\n      </form>\n    );\n  }\n}\n\nAddNote.propTypes = {\n  // define prop types here\n  folder: PropTypes.array.isRequired\n};\n\nAddNote.defaultProps = {\n  folder: []\n};\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    // initialize state with a constructor\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  // This lifecycle is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"ErrorBoundary\">\n          <h2>Could not display this content.</h2>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport NoteListNav from \"../NoteListNav/NoteListNav\";\nimport NotePageNav from \"../NotePageNav/NotePageNav\";\nimport NoteListMain from \"../NoteListMain/NoteListMain\";\nimport NotePageMain from \"../NotePageMain/NotePageMain\";\nimport AddFolder from \"../NotefulForm/AddFolder\";\nimport AddNote from \"../NotefulForm/AddNote\";\nimport \"./App.css\";\nimport apiContext from \"../apiContext\";\nimport config from \"../config\";\nimport ErrorBoundary from \"../ErrorBoundary\";\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.PORT_URL}/notes`),\n      fetch(`${config.PORT_URL}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    });\n  };\n\n  renderNavRoutes() {\n    return (\n      <>\n        <ErrorBoundary>\n          {[\"/\", \"/folder/:folderId\"].map(path => (\n            <Route exact key={path} path={path} component={NoteListNav} />\n          ))}\n          <Route path=\"/note/:noteId\" component={NotePageNav} />\n          <Route path=\"/add-folder\" component={NotePageNav} />\n          <Route path=\"/add-note\" component={NotePageNav} />\n        </ErrorBoundary>\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n\n    return (\n      <>\n        <ErrorBoundary>\n          {[\"/\", \"/folder/:folderId\"].map(path => (\n            <Route exact key={path} path={path} component={NoteListMain} />\n          ))}\n          <Route path=\"/note/:noteId\" component={NotePageMain} />\n\n          <Route exact path=\"/add-folder\" component={AddFolder} />\n\n          <Route\n            exact\n            path=\"/add-note\"\n            component={AddNote}\n            folder={this.state.folders}\n          />\n        </ErrorBoundary>\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote\n    };\n\n    return (\n      <apiContext.Provider value={value}>\n        <div className=\"App\">\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{\" \"}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">{this.renderMainRoutes()}</main>\n        </div>\n      </apiContext.Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faPlus,\n  faChevronLeft,\n  faTrashAlt,\n  faCheckDouble\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}